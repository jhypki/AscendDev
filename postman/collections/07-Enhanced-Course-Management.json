{
    "info": {
        "_postman_id": "enhanced-course-management",
        "name": "07 - Enhanced Course Management",
        "description": "Enhanced course CRUD operations, publishing workflow, and analytics",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Course CRUD Operations",
            "item": [
                {
                    "name": "Create Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Course created successfully\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    pm.expect(jsonData.status).to.equal('draft');",
                                    "    ",
                                    "    // Store the new course ID for other requests",
                                    "    pm.environment.set('newCourseId', jsonData.id);",
                                    "    console.log('Created course ID:', jsonData.id);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Advanced JavaScript Course\",\n    \"slug\": \"advanced-javascript-course\",\n    \"description\": \"Learn advanced JavaScript concepts and patterns\",\n    \"language\": \"javascript\",\n    \"tags\": [\"javascript\", \"advanced\", \"programming\"],\n    \"featuredImage\": \"https://example.com/js-course.jpg\",\n    \"status\": \"draft\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/courses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses"
                            ]
                        },
                        "description": "Create a new course"
                    }
                },
                {
                    "name": "Update Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Course updated successfully\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    console.log('Updated course:', jsonData.title);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"title\": \"Advanced JavaScript Course - Updated\",\n    \"slug\": \"advanced-javascript-course-updated\",\n    \"description\": \"Learn advanced JavaScript concepts, patterns, and best practices\",\n    \"language\": \"javascript\",\n    \"tags\": [\"javascript\", \"advanced\", \"programming\", \"es6\"],\n    \"featuredImage\": \"https://example.com/js-course-updated.jpg\",\n    \"status\": \"draft\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{newCourseId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{newCourseId}}"
                            ]
                        },
                        "description": "Update an existing course"
                    }
                },
                {
                    "name": "Get Course by Slug",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Course retrieved by slug\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('slug');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    console.log('Course found:', jsonData.title);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/slug/{{courseSlug}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "slug",
                                "{{courseSlug}}"
                            ]
                        },
                        "description": "Get course by slug"
                    }
                },
                {
                    "name": "Delete Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});",
                                    "",
                                    "console.log('Course deleted successfully');"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{newCourseId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{newCourseId}}"
                            ]
                        },
                        "description": "Delete a course"
                    }
                }
            ]
        },
        {
            "name": "Course Publishing Workflow",
            "item": [
                {
                    "name": "Publish Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Course published successfully\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('message');",
                                    "    pm.expect(jsonData.message).to.include('published');",
                                    "    console.log('Publish result:', jsonData.message);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{courseId}}/publish",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{courseId}}",
                                "publish"
                            ]
                        },
                        "description": "Publish a course"
                    }
                },
                {
                    "name": "Unpublish Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Course unpublished successfully\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('message');",
                                    "    pm.expect(jsonData.message).to.include('unpublished');",
                                    "    console.log('Unpublish result:', jsonData.message);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{courseId}}/unpublish",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{courseId}}",
                                "unpublish"
                            ]
                        },
                        "description": "Unpublish a course"
                    }
                },
                {
                    "name": "Preview Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Course preview retrieved\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('title');",
                                    "    console.log('Preview for course:', jsonData.title);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{courseId}}/preview",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{courseId}}",
                                "preview"
                            ]
                        },
                        "description": "Preview a course (fresh data, no cache)"
                    }
                }
            ]
        },
        {
            "name": "Course Filtering & Search",
            "item": [
                {
                    "name": "Get Published Courses",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Published courses retrieved\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.be.an('array');",
                                    "    console.log('Published courses count:', jsonData.length);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/published",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "published"
                            ]
                        },
                        "description": "Get all published courses"
                    }
                },
                {
                    "name": "Get Courses by Status",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Courses filtered by status\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.be.an('array');",
                                    "    console.log('Courses with status', pm.environment.get('courseStatus') + ':', jsonData.length);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/status/{{courseStatus}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "status",
                                "{{courseStatus}}"
                            ]
                        },
                        "description": "Get courses by status"
                    }
                },
                {
                    "name": "Get Courses by Tag",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Courses filtered by tag\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.be.an('array');",
                                    "    console.log('Courses with tag', pm.environment.get('courseTag') + ':', jsonData.length);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/tag/{{courseTag}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "tag",
                                "{{courseTag}}"
                            ]
                        },
                        "description": "Get courses by tag"
                    }
                },
                {
                    "name": "Get Courses by Language",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Courses filtered by language\", function () {",
                                    "    const jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.be.an('array');",
                                    "    console.log('Courses with language', pm.environment.get('courseLanguage') + ':', jsonData.length);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/language/{{courseLanguage}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "language",
                                "{{courseLanguage}}"
                            ]
                        },
                        "description": "Get courses by programming language"
                    }
                }
            ]
        },
        {
            "name": "Course Analytics",
            "item": [
                {
                    "name": "Get Total Course Count",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Total count retrieved\", function () {",
                                    "    const count = pm.response.json();",
                                    "    pm.expect(count).to.be.a('number');",
                                    "    console.log('Total courses:', count);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/analytics/count",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "analytics",
                                "count"
                            ]
                        },
                        "description": "Get total number of courses"
                    }
                },
                {
                    "name": "Get Course Count by Status",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Status count retrieved\", function () {",
                                    "    const count = pm.response.json();",
                                    "    pm.expect(count).to.be.a('number');",
                                    "    console.log('Courses with status', pm.environment.get('courseStatus') + ':', count);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/analytics/count/status/{{courseStatus}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "analytics",
                                "count",
                                "status",
                                "{{courseStatus}}"
                            ]
                        },
                        "description": "Get course count by status"
                    }
                },
                {
                    "name": "Get Course Statistics",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Statistics retrieved\", function () {",
                                    "    const stats = pm.response.json();",
                                    "    pm.expect(stats).to.be.an('object');",
                                    "    console.log('Course statistics:', JSON.stringify(stats, null, 2));",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/analytics/statistics",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "analytics",
                                "statistics"
                            ]
                        },
                        "description": "Get comprehensive course statistics"
                    }
                }
            ]
        },
        {
            "name": "Course Validation",
            "item": [
                {
                    "name": "Validate Course",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Validation result retrieved\", function () {",
                                    "    const isValid = pm.response.json();",
                                    "    pm.expect(isValid).to.be.a('boolean');",
                                    "    console.log('Course is valid:', isValid);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{courseId}}/validate",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{courseId}}",
                                "validate"
                            ]
                        },
                        "description": "Validate a course"
                    }
                },
                {
                    "name": "Get Course Validation Errors",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Validation errors retrieved\", function () {",
                                    "    const errors = pm.response.json();",
                                    "    pm.expect(errors).to.be.an('array');",
                                    "    console.log('Validation errors:', errors);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/courses/{{courseId}}/validation-errors",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "courses",
                                "{{courseId}}",
                                "validation-errors"
                            ]
                        },
                        "description": "Get validation errors for a course"
                    }
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{accessToken}}",
                "type": "string"
            }
        ]
    }
}